codata Bool : Type {}

impl Bool {
    codef True(): Bool {}
    codef False(): Bool {}
}

data Nat : Type {
    Z: Nat,
    S(n: Nat) : Nat,
}

data Foo(b: Bool) : Type {
    Bar : Foo(True),
    Baz : Foo(False),
}

impl Foo {
    def Foo(True).foo() : Nat {
        Bar() => Z,
        Baz() absurd,
    }
}

Baz.foo()
